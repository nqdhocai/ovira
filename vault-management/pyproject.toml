[project]
name = "vault-management"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "aiohttp>=3.12.15",
  "beanie==1.29",
  "fastapi==0.115.4",
  "google-generativeai>=0.8.5",
  "httpx>=0.28.1",
  "opentelemetry-api==1.27",
  "opentelemetry-exporter-jaeger>=1.21.0",
  "opentelemetry-exporter-otlp==1.27",
  "opentelemetry-exporter-otlp-proto-common==1.27",
  "opentelemetry-exporter-otlp-proto-grpc==1.27",
  "opentelemetry-exporter-otlp-proto-http==1.27",
  "opentelemetry-instrumentation>=0.48b0",
  "opentelemetry-instrumentation-fastapi>=0.48b0",
  "opentelemetry-instrumentation-logging>=0.48b0",
  "opentelemetry-proto==1.27",
  "opentelemetry-sdk==1.27",
  "python-dotenv>=1.0.1",
  "pyyaml>=6.0.2",
  "setuptools>=76",
  "ujson>=5.11.0",
  "uvicorn==0.34",
]


[tool.setuptools.packages.find]
where = ["."]


[tool.ruff.lint]
select = [
  # Import sorting rules
  "I",
  # Pycodestyle rules (E, V)
  "E",
  # Tidy import rules
  "TID",
  # Perflint
  "PERF",
  # FastAPI specific rules
  "FAST",
]
ignore = [
  ### Intentionally disabled
  # module level import not at top of file
  "E402",
  # line too long
  "E501",
  # do not assign a lambda expression, use a def
  "E731",
  # incorrect-dict-iterator, flags valid Series.items usage
  "PERF102",
  # try-except-in-loop, becomes useless in Python 3.11
  "PERF203",
]

[tool.uv]
concurrent-downloads = 10 # prevents uv from consuming all the CPU by concurrently downloading packages

[tool.basedpyright]
pythonVersion = "3.10"
pythonPlatform = "Linux"
typeCheckingMode = "recommended"
reportUnusedVariable = "hint"
reportUnusedImport = "hint"
reportUnusedParameter = "hint"
reportUnusedExpression = "hint"
reportMissingTypeStubs = false
autoImportCompletions = true
reportAny = false
reportExplicitAny = false
